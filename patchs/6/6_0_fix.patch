Index: src/main/java/ru/javawebinar/topjava/Profiles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/Profiles.java	(revision 7a75a12df5b45c209172b4816683936aad4d8f8c)
+++ src/main/java/ru/javawebinar/topjava/Profiles.java	(revision 2fb34cebf8f545877e87042924494ac89ff77b19)
@@ -14,16 +14,21 @@
 
     //  Get DB profile depending of DB driver in classpath
     public static String getActiveDbProfile() {
+        if (isClassExists("org.postgresql.Driver")) {
+            return POSTGRES_DB;
+        } else if (isClassExists("org.hsqldb.jdbcDriver")) {
+            return HSQL_DB;
+        } else {
+            throw new IllegalStateException("Could not find DB driver");
+        }
+    }
+
+    private static boolean isClassExists(String name) {
         try {
-            Class.forName("org.postgresql.Driver");
-            return POSTGRES_DB;
+            Class.forName(name);
+            return true;
         } catch (ClassNotFoundException ex) {
-            try {
-                Class.forName("org.hsqldb.jdbcDriver");
-                return Profiles.HSQL_DB;
-            } catch (ClassNotFoundException e) {
-                throw new IllegalStateException("Could not find DB driver");
-            }
+            return false;
         }
     }
 }
Index: src/main/java/ru/javawebinar/topjava/util/DateTimeUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/DateTimeUtil.java	(revision 7a75a12df5b45c209172b4816683936aad4d8f8c)
+++ src/main/java/ru/javawebinar/topjava/util/DateTimeUtil.java	(revision 2fb34cebf8f545877e87042924494ac89ff77b19)
@@ -32,10 +32,10 @@
     }
 
     public static @Nullable LocalDate parseLocalDate(@Nullable String str) {
-        return StringUtils.isEmpty(str) ? null : LocalDate.parse(str);
+        return !StringUtils.hasText(str) ? null : LocalDate.parse(str);
     }
 
     public static @Nullable LocalTime parseLocalTime(@Nullable String str) {
-        return StringUtils.isEmpty(str) ? null : LocalTime.parse(str);
+        return !StringUtils.hasText(str) ? null : LocalTime.parse(str);
     }
 }
Index: src/main/java/ru/javawebinar/topjava/web/MealServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/MealServlet.java	(revision 7a75a12df5b45c209172b4816683936aad4d8f8c)
+++ src/main/java/ru/javawebinar/topjava/web/MealServlet.java	(revision 2fb34cebf8f545877e87042924494ac89ff77b19)
@@ -45,7 +45,7 @@
                 request.getParameter("description"),
                 Integer.parseInt(request.getParameter("calories")));
 
-        if (StringUtils.isEmpty(request.getParameter("id"))) {
+        if (!StringUtils.hasText(request.getParameter("id"))) {
             mealController.create(meal);
         } else {
             mealController.update(meal, getId(request));
Index: src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java
===================================================================
--- src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java	(revision 7a75a12df5b45c209172b4816683936aad4d8f8c)
+++ src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java	(revision 2fb34cebf8f545877e87042924494ac89ff77b19)
@@ -38,7 +38,7 @@
     private CacheManager cacheManager;
 
     @Before
-    public void setUp() throws Exception {
+    public void setUp() {
         cacheManager.getCache("users").clear();
     }
 
